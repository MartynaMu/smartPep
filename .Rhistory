library(smartPep)
data_file <- "C:/Users/Windows/Documents/R_projects/imm_chunks_vs_susp2/data/report.tsv"
df_new <- maxlfq(data_file)
dfRaw <- read.delim(data_file)
View(dfRaw)
dfRaw <- filter(dfRaw, !grepl("Biognosys", dfRaw$Protein.Ids))
dfRaw <- read.delim(data_file)
dfRaw <- dplyr::filter(dfRaw, !grepl("Biognosys", dfRaw$Protein.Ids))
View(dfRaw)
dfRaw <- dplyr::filter(dfRaw, !grepl("contam", dfRaw$Protein.Ids))
library(smartPep)
data_file <- "C:/Users/Windows/Documents/R_projects/imm_chunks_vs_susp2/data/report.tsv"
df_new <- maxlfq(data_file)
data_file <- "C:/Users/Windows/Documents/R_projects/imm_chunks_vs_susp2/data/report.tsv"
library(smartPep)
df_new <- maxlfq(data_file)
View(df_new)
df_new <- df_new[,c(1:7, 9, 8, 10:15)]
df_new <- df_new[,-c(13, 7, 8)]
df <- merge2reps(df_new, 5, 12)
library(smartPep)
df <- merge2reps(df_new, 5, 12)
Q
library(smartPep)
df <- merge2reps(df_new, 5, 12)
library(smartPep)
df <- merge2reps(df_new, 5, 12)
length(seq.int(5, 12, 2))
library(smartPep)
df <- merge2reps(df_new, 5, 12)
seq.int(5, 12, 2)
library(smartPep)
df <- merge2reps(df_new, 5, 12)
df_new[, 5] <- if_else( #pasting value from next tech rep in case of NA
is.na(df[, 5]) == TRUE,
df[, 6],
df[, 5])
df_new[, 5] <- if_else( #pasting value from next tech rep in case of NA
is.na(df[, 5]) == TRUE,
df[, 6],
df[, 5])
df_new[, 5] <- if_else( #pasting value from next tech rep in case of NA
is.na(df[, 5]) == TRUE,
df[, 6],
df[, 5])
df_new[, 5] <- if_else( #pasting value from next tech rep in case of NA
is.na(df[, 5]),
df[, 6],
df[, 5])
df <- df_new
df[, 5] <- if_else( #pasting value from next tech rep in case of NA
is.na(df[, 5]) == TRUE,
df[, 6],
df[, 5])
df[, 5] <- if_else( #pasting value from next tech rep in case of NA
is.na(df[, 5]),
df[, 6],
df[, 5])
df[, 5] <- if_else( #pasting value from next tech rep in case of NA
df[is.na(df[, 5])],
df[, 6],
df[, 5])
is.na(df[, 5]) == TRUE
df[, 5] <- dplyr::if_else( #pasting value from next tech rep in case of NA
is.na(df[, 5]) == TRUE,
df[, 6],
df[, 5])
rlang::last_trace()
df[5]
df[5] <- dplyr::if_else( #pasting value from next tech rep in case of NA
is.na(df[5]) == TRUE,
df[6],
df[5])
rlang::last_trace()
rlang::last_trace(drop = FALSE)
seq.int(5,12,2)
?if_else
df <- mutate(df, Sample1 = case_when(
is.na(df[,5]) ~ df[,6],
is.na(df[,6]) ~ df[,5]
.default = rowMeans(df[, c(5, 6)])
View(df)
mutate(df, Sample1 = case_when(
is.na(df[,5]) ~ df[,6],
is.na(df[,6]) ~ df[,5]
.default = rowMeans(df[, c(5, 6)])
df <- mutate(df, Sample1 = case_when(
is.na(df$`G:\15_06_23_imm_chunks_vs_sus\dia\mzml\imm_CvS_GT_DIA1_10ul.mzML`) ~ df$`G:\15_06_23_imm_chunks_vs_sus\dia\mzml\imm_CvS_GT_DIA2_10ul.mzML`,
df <- mutate(df, Sample1 = case_when(
is.na(df[,5]) ~ df[,6],
is.na(df[,6]) ~ df[,5],
.default = rowMeans(df[, c(5, 6)])
)
df <- dplyr::mutate(df, Sample1 = case_when(
View(df)
df <- dplyr::mutate(df, Sample1 = case_when(
is.na(df[,5]) == TRUE ~ df[,6],
is.na(df[,6]) == TRUE ~ df[,5],
.default = rowMeans(df[, c(5, 6)])
)
install.packages("dplyr")
df <- dplyr::mutate(df, Sample1 = case_when(
is.na(df[,5]) == TRUE ~ df[,6],
is.na(df[,6]) == TRUE ~ df[,5],
.default = rowMeans(df[, c(5, 6)])
)
library(smartPep)
data_file <- "C:/Users/Windows/Documents/R_projects/imm_chunks_vs_susp2/data/report.tsv"
df_new <- maxlfq(data_file)
df_new <- df_new[,c(1:7, 9, 8, 10:15)]
df_new <- df_new[,-c(13, 7, 8)]
df <- df_new
View(df)
df <- merge2reps(df, 5)
library(smartPep)
df <- merge2reps(df, 5)
df <- merge2reps(df, 5)
df[, 5] <- if_else(#pasting value from next tech rep in case of NA
is.na(df[, 5]) == TRUE,
df[, 6],
df[, 6])
df[, col] <- if_else(#pasting value from next tech rep in case of NA
is.na(df[, col]) == TRUE,
df[, col+1],
df[, col])
df[, 5] <- if_else(is.na(df[, 5]) == TRUE,df[, 6],df[, 6])
View(df)
data_file <- "C:/Users/Windows/Documents/R_projects/imm_chunks_vs_susp2/data/report.tsv"
df_new <- maxlfq(data_file)
df_new <- df_new[,c(1:7, 9, 8, 10:15)]
df_new <- df_new[,-c(13, 7, 8)]
df <- df_new
df[, 5] <- if_else(is.na(df[, 5]) == TRUE,df[, 6],df[, 6])
library(smartPep)
df <- merge2reps(df, 5)
library(smartPep)
df <- merge2reps(df, 5)
library(smartPep)
df <- merge2reps(df, 5)
library(smartPep)
df <- merge2reps(df, 5)
library(smartPep)
df <- merge2reps(df, 5)
rlang::last_trace()
rlang::last_trace(drop = FALSE)
col
library(smartPep)
df <- merge2reps(df, 5)
i
library(smartPep)
id = 1
df <- for(i in (seq.int(5,12,2)-1)) {
df <- mergeReps(df, 5, id = id)
id <- id + 1
}
id = 1
for(i in (seq.int(5,12,2)-1)) {
df <- mergeReps(df, 5, id = id)
id <- id + 1
}
i = 5 #column index in df
imax = 11 #max index of columns to be merged (=ncols - 1 because we take every 2)
e = 1 #sample index
while(i <= imax) {
df <- merge2reps(df = df, col = i, id = e)
i <- i + 2 #taking every 2 columns at once (technical reps) next
e <- e + 1 #next sample index
}
i = 5 #column index in df
imax = 11 #max index of columns to be merged (=ncols - 1 because we take every 2)
e = 1 #sample index
while(i <= imax) {
df <- merge2reps(df = df, col = i, id = e)
i <- i + 2 #taking every 2 columns at once (technical reps) next
e <- e + 1 #next sample index
}
View(df)
data_file <- "C:/Users/Windows/Documents/R_projects/imm_chunks_vs_susp2/data/report.tsv"
df_new <- maxlfq(data_file)
library(smartPep)
data_file <- "C:/Users/Windows/Documents/R_projects/imm_chunks_vs_susp2/data/report.tsv"
df_new <- maxlfq(data_file)
df_new <- df_new[,c(1:7, 9, 8, 10:15)]
df_new <- df_new[,-c(13, 7, 8)]
df <- df_new
str(df)
library(smartPep)
df <- as.data.frame(df)
str(df)
seq.int(5, 12, 2)
df <- merge2reps(df, 5, 12)
df_m <- df[,-(5:12)] #storing only averaged tech reps
library(smartPep)
df_m <- df[,-(5:12)] #storing only averaged tech reps
View(df_m)
colnames(df_m)[5:8] <- c("Tumor digested",
"Lung chunks",
"Tumor chunks",
"Lung digested")
df_m <- df_m[,c(1, 2, 3, 4, 7, 5, 6, 8)]
View(df_m)
dfWLog <- mutate(df_m, log2(df_m[5:8]), .keep = "all")
dfLLog <- pivot_longer(dfWLog, 5:8, values_to = "Intensity",
names_to = "Sample", values_drop_na = TRUE)
sumstat <- sum_stats(dfLLog)
View(sumstat)
plot_length_distr(dfLLog)
dfWLogN <- proBatch::quantile_normalize_dm(as.matrix(dfWLog[5:8]))
dfWLogN <- bind_cols(dfWLog[1:4], dfWLogN)
hm_all(dfWLogN, 5:8)
hm_small(dfWLogN, "COL", 5:8)
hm_small(dfWLogN, "ACTB", 5:8)
library(smartPep)
?smartPep
??smartPep
?cleanup_ranks
?case_when
??case_when
library(smartPep)
?cleanup_ranks
?binding_category
library(smartPep)
?cleanup_ranks
library(smartPep)
?cleanup_ranks
library(smartPep)
?cleanup_ranks
library(smartPep)
?group_by
??group_by
??facet_wrap
library(smartPep)
?seq_along()
seq.int(4:8,2)
seq.int(4:8, by=2)
seq.int(4:8)
seq_along(4:8)
seq_along(4:8, by=3)
dtype
?dtype
#Intensity quantification results-----------------------------------------------
##Load report.tsv DIA-NN quantification results and apply MaxLFQ----------------
data_file <- "C:\\Users\\Windows\\Documents\\R_projects\\imm_chunks_vs_susp2\\data\\report.tsv"
df <- read.delim(data_file)
is.matrix(df)
is.numeric(df)
is.numeric(df[,6])
View(df)
is.numeric(df[,11])
df %>% dplyr::select_if(is.numeric())
dplyr::select_if(df, is.numeric())
library(dplyr)
df %>% select_if(is.numeric())
df %>% select_if(is.numeric
)
select_if(df, is.numeric)
length(dplyr::select_if(df,is.numeric()))
length(dplyr::select_if(df,is.numeric)
)
which(sapply(df,is.numeric))
indices <- which(sapply(df,is.numeric))
seq.int(indices, by=2)
df <- maxlfq(data_file)
libs <- c("tidyverse", "ggplot2", "ggpubr", "DEP", "readxl", "smartPep")
lapply(libs, require, character.only = TRUE)
df <- maxlfq(data_file)
#Subsetting runs with more similar TIC
df <- df[,-c(5, 8, 9)]
df <- as.data.frame(df)
##Technical duplicate merge------------------------------------------------------
df <- merge2reps(df, num_col1 = 5, num_col2 = 12)
library(smartPep)
#Libraries----------------------------------------------------------------------
libs <- c("tidyverse", "ggplot2", "ggpubr", "DEP", "readxl", "smartPep")
lapply(libs, require, character.only = TRUE)
#Plot theme---------------------------------------------------------------------
theme_set(theme_DEP1())
#Intensity quantification results-----------------------------------------------
##Load report.tsv DIA-NN quantification results and apply MaxLFQ----------------
data_file <- "C:\\Users\\Windows\\Documents\\R_projects\\imm_chunks_vs_susp2\\data\\report.tsv"
df <- read.delim(data_file)
df <- maxlfq(data_file)
#Subsetting runs with more similar TIC
df <- df[,-c(5, 8, 9)]
df <- as.data.frame(df)
##Technical duplicate merge------------------------------------------------------
df <- merge2reps(df, num_col1 = 5, num_col2 = 12)
##Technical duplicate merge------------------------------------------------------
df <- merge2reps(df)
View(df)
df <- maxlfq(data_file)
#Subsetting runs with more similar TIC
df <- df[,-c(5, 8, 9)]
dfm <- as.data.frame(df)
df <- as.data.frame(df)
##Technical duplicate merge------------------------------------------------------
dfm <- merge2reps(df)
View(dfm)
intensity_indices <- which(sapply(df,is.numeric))
intensity_indices[1]
seq.int(intensity_indices[1], length(intensity_indices), 2)
length(intensity_indices)
ncol(intensity_indices)
nrow(intensity_indices)
max(intensity_indices)
library(smartPep)
#Libraries----------------------------------------------------------------------
libs <- c("tidyverse", "ggplot2", "ggpubr", "DEP", "readxl", "smartPep")
lapply(libs, require, character.only = TRUE)
#Plot theme---------------------------------------------------------------------
theme_set(theme_DEP1())
#Intensity quantification results-----------------------------------------------
##Load report.tsv DIA-NN quantification results and apply MaxLFQ----------------
data_file <- "C:\\Users\\Windows\\Documents\\R_projects\\imm_chunks_vs_susp2\\data\\report.tsv"
df <- maxlfq(data_file)
#Subsetting runs with more similar TIC
df <- df[,-c(5, 8, 9)]
df <- as.data.frame(df)
##Technical duplicate merge------------------------------------------------------
dfm <- merge2reps(df)
View(dfm)
#Renaming samples
colnames(df)[5:8] <- c("Tumor digested",
"Lung chunks",
"Tumor chunks",
"Lung digested")
#Tidying the order of columns
df <- df[,c(1, 2, 3, 4, 7, 5, 6, 8)]
#Transforming and formatting-----------------------------------------------------
dfWLog <- mutate(df, log2(df[5:8]), .keep = "all")
dfLLog <- pivot_longer(dfWLog, 5:8, values_to = "Intensity",
names_to = "Sample", values_drop_na = TRUE)
library(smartPep)
library(smartPep)
library(smartPep)
